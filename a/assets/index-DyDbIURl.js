import{initializeApp as h}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";import{getDatabase as y,ref as E,get as b,child as L}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-database.js";(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const o of t.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&a(o)}).observe(document,{childList:!0,subtree:!0});function i(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function a(e){if(e.ep)return;e.ep=!0;const t=i(e);fetch(e.href,t)}})();const M="modulepreload",N=function(r){return"/smart-green-house/"+r},$={},w=function(n,i,a){let e=Promise.resolve();if(i&&i.length>0){let o=function(s){return Promise.all(s.map(d=>Promise.resolve(d).then(u=>({status:"fulfilled",value:u}),u=>({status:"rejected",reason:u}))))};document.getElementsByTagName("link");const c=document.querySelector("meta[property=csp-nonce]"),m=c?.nonce||c?.getAttribute("nonce");e=o(i.map(s=>{if(s=N(s),s in $)return;$[s]=!0;const d=s.endsWith(".css"),u=d?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${s}"]${u}`))return;const l=document.createElement("link");if(l.rel=d?"stylesheet":M,d||(l.as="script"),l.crossOrigin="",l.href=s,m&&l.setAttribute("nonce",m),document.head.appendChild(l),d)return new Promise((T,v)=>{l.addEventListener("load",T),l.addEventListener("error",()=>v(new Error(`Unable to preload CSS for ${s}`)))})}))}function t(o){const c=new Event("vite:preloadError",{cancelable:!0});if(c.payload=o,window.dispatchEvent(c),!c.defaultPrevented)throw o}return e.then(o=>{for(const c of o||[])c.status==="rejected"&&t(c.reason);return n().catch(t)})};let f;try{if(f=(await w(()=>import("./config-DFQXzEkq.js"),[])).firebaseConfig,!f||!f.apiKey)throw new Error("Firebase configuration is invalid or missing apiKey.")}catch(r){console.error("Failed to import Firebase configuration:",r)}const P=h(f),_=y(P);function B(){const r=E(_,"weatherParameters/tap");b(r).then(n=>{n.exists()?(document.getElementById("waterSwitch").checked=n.val()==="true",console.log("Water tap state (from Firebase):",n.val())):console.error("No tap data found in Firebase.")}).catch(n=>console.error("Error reading data:",n))}window.addEventListener("load",B);let g;try{if(g=(await w(()=>import("./config-DFQXzEkq.js"),[])).firebaseConfig,!g||!g.apiKey)throw new Error("Firebase configuration is invalid or missing apiKey.")}catch(r){console.error("Failed to import Firebase configuration:",r)}const F=h(g),D=y(F);function S(){const r=E(D),n=document.getElementById("tempValue"),i=document.getElementById("humidityValue"),a=document.getElementById("soilValue"),e=document.getElementById("lightValue");n.innerText="Loading...",i.innerText="Loading...",a.innerText="Loading...",e.innerText="Loading...",b(L(r,"weatherParameters")).then(t=>{if(t.exists()){const o=t.val();n.innerText=`${o.temp}Â°C`,i.innerText=`${o.humidity}%`,a.innerText=`${o.moisture}%`,e.innerText=`${o.light} lux`}else n.innerText="No data found!",i.innerText="No data found!",a.innerText="No data found!",e.innerText="No data found!"}).catch(t=>{console.error("Error reading data:",t),n.innerText=`Error: ${t.message}`,i.innerText=`Error: ${t.message}`,a.innerText=`Error: ${t.message}`,e.innerText=`Error: ${t.message}`})}S();setInterval(S,6e4);let p;try{if(p=(await w(()=>import("./config-DFQXzEkq.js"),[])).firebaseConfig,!p||!p.apiKey)throw new Error("Firebase configuration is invalid or missing apiKey.")}catch(r){console.error("Failed to import Firebase configuration:",r)}const C=h(p),O=y(C);function x(){const r=E(O);b(L(r,"weatherParameters")).then(n=>{if(n.exists()){const i=n.val();if(!i.time){document.getElementById("status").innerHTML='<i class="fas fa-times-circle me-2"></i> Something went wrong.',document.getElementById("status").className="status-badge status-danger",console.error("Time key is missing in Firebase data.");return}const a=i.time;console.log("Last updated time from Firebase:",a);const e=new Date,t=e.getFullYear(),o=String(e.getMonth()+1).padStart(2,"0"),c=String(e.getDate()).padStart(2,"0"),m=String(e.getHours()).padStart(2,"0"),s=String(e.getMinutes()).padStart(2,"0"),d=String(e.getSeconds()).padStart(2,"0"),u=`${t}-${o}-${c} ${m}:${s}:${d}`,l=new Date(a),I=(new Date(u)-l)/(1e3*60);console.log("Difference in minutes:",I),I<=5?(document.getElementById("status").innerHTML='<i class="fas fa-check-circle me-2"></i> Working Well',document.getElementById("status").className="status-badge status-success"):(document.getElementById("status").innerHTML='<i class="fas fa-times-circle me-2"></i> The application is not available at this time.',document.getElementById("status").className="status-badge status-warning")}else console.error("No data found!"),document.getElementById("status").innerHTML='<i class="fas fa-times-circle me-2"></i> No data found!',document.getElementById("status").className="status-badge status-danger"}).catch(n=>{console.error("Error reading data:",n),document.getElementById("status").innerHTML='<i class="fas fa-times-circle me-2"></i> Error fetching data!',document.getElementById("status").className="status-badge status-danger"})}x();setInterval(x,6e4);
